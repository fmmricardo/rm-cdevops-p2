Description: >
    Ricardo Martins / Project 2 Udacity 2021

Parameters:

    EnvironmentName:
        Description: Environment name for prefing to resource names
        Type: String

Resources:
  
  IAMRole:
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17" 
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns: 
      #- arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore 
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/CloudWatchFullAccess

  ServerInstanceProfile:
   Type: "AWS::IAM::InstanceProfile"
   Properties: 
     Roles: 
       - !Ref IAMRole 
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp  
        FromPort: 22 
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt-get install apache2 -y
          sudo systemctl start apache2.service          
      ImageId: ami-047a51fa27710816e
      IamInstanceProfile: !Ref ServerInstanceProfile
      KeyName: VocareumKey2 # Provides the name of the EC2 key pair. 
      SecurityGroups:
      - Ref: WebServerSecGroup
      InstanceType: t3.medium # specific machine from amazon
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk" # linux devive name, mount ponts to create folders
        Ebs:
          VolumeSize: '10' #how much hardrivce space the machine will need gb 
      UserData:
        Fn::Base64: !Sub |
         #!/bin/bash
         apt-get update -y
         apt-get install unzip awscli -y
         apt-get install apache2 -y
         systemctl start apache2.service
         cd /var/www/html
         aws s3 cp s3://udacity-demo-1/udacity.zip .
         unzip -o udacity.zip
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig # ref to security group => port 8080 open to the world
      MinSize: '4'
      MaxSize: '6'
      TargetGroupARNs:
      - Ref: WebAppTargetGroup
  WebAppLB:
    # the subnets need to be provided 
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
      - Ref: LBSecGroup
  Listener: 
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP
  ALBListenerRule:
    #is required by the loadbalancer 
     Type: AWS::ElasticLoadBalancingV2::ListenerRule
     Properties:
       Actions:
       - Type: forward
         TargetGroupArn: !Ref 'WebAppTargetGroup'
       Conditions:
       - Field: path-pattern
         Values: [/] #pass to listen to 
       ListenerArn: !Ref 'Listener'
       Priority: 1
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup 
    Properties:
      HealthCheckIntervalSeconds: 10 
      HealthCheckPath: /  
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8 
      HealthyThresholdCount: 2 
      Port: 8080
      Protocol: HTTP
      UnhealthyThresholdCount: 5  
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"
  
  ProfileWithRolesForOurApp:
       Type: AWS::IAM::InstanceProfile
       Properties: 
         Roles:
           - UdacityS3ReadOnlyEC2
  

Outputs: 

 LoadBalancerDNSName:
  Description: DNS Name of the web application
  Value: !Join [ "", [ "http://", !GetAtt LoadBalancer.DNSName ] ]
  Export:
    Name: !Sub "${ProjectName}-DNS-NAME"
